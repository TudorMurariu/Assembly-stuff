     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 577A                        a dw 0111101001010111b ; 7A57h
    15 00000002 69                          b db 01101001b         ;   69h
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21 00000000 66A1[00000000]                  mov ax , [a] ;ax = a
    22 00000006 6625000F                        and ax , 0111100000000b ; ax = 0000 1010 0000 0000b = 0A00h
    23 0000000A 66C1E808                        shr ax , 8 ; ax = 01010b = Ah
    24 0000000E 8A1D[02000000]                  mov bl , [b] ; bl = b = 0110 1001b = 69h
    25 00000014 80E3F0                          and bl , 11110000b ;bl = 0110 0000b = 60h
    26 00000017 08C3                            or bl , al ; bl =0110 1010 = 6Ah
    27                                          ; exit(0)
    28 00000019 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    29 0000001B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
