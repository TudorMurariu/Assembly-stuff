     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ... ///
    14 00000000 2A                          a db 00101010b ; = 2Ah
    15 00000001 72                          b db 01110010b ; = 72h
    16 00000002 89                          c db 10001001b ; = 89h
    17 00000003 B7                          d db 10110111b ; = B7h
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[00000000]                    mov al , [a] ; al = a = 00101010b = 2Ah
    24 00000005 2470                            and al , 01110000b ; al = 0010 0000b = 20h
    25 00000007 C0E804                          shr al , 4 ; al = 010b = 02h
    26                                          
    27 0000000A 8A1D[01000000]                  mov bl , [b] ; bl = b = 72h
    28 00000010 80E370                          and bl , 01110000b ; bl = 0111 0000b = 70h
    29 00000013 C0EB04                          shr bl , 4 ; bl = 07h = 0111b
    30 00000016 00D8                            add al , bl ; al = al + bl = 01001b = 09h
    31                                          
    32 00000018 8A1D[02000000]                  mov bl , [c] ; bl = c = 89h
    33 0000001E 80E370                          and bl , 01110000b ; bl = 0000 0000b = 0h
    34 00000021 C0EB04                          shr bl , 4 ; bl = 0h = 0b
    35 00000024 00D8                            add al , bl ; al = al + bl = 01001b = 09h
    36                                          
    37 00000026 8A1D[03000000]                  mov bl , [d] ; bl = b = B7h
    38 0000002C 80E370                          and bl , 01110000b ; bl = 0011 0000b = 30h
    39 0000002F C0EB04                          shr bl , 4 ; bl = 03h = 0011b
    40 00000032 00D8                            add al , bl ; al = al + bl = 01100b = 0Ch
    41                                          ; exit(0)
    42 00000034 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 00000036 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
