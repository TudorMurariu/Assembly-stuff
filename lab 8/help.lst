     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 323220332035203230-         text db "22 3 5 200 77 700",10,0
    14 00000009 30203737203730300A-
    14 00000012 00                 
    15 00000013 0A00                        linie_noua db 10,0
    16 00000015 256400                      format db "%d",0
    17 00000018 FDFF                        x dw 0fffdh
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 8005[18000000]02                add byte[x],2
    23 00000007 66A1[18000000]                  mov ax , [x]
    24                                         
    25                                          
    26                                          
    27                                          
    28                                          
    29                                          
    30                                          ; exit(0)
    31 0000000D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 0000000F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
