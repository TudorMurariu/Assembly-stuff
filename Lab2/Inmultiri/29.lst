     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 1E                          a db 30
    15 00000001 14                          b db 20
    16 00000002 03                          c db 3
    17 00000003 C800                        d dw 200
    18 00000005 02                          doi db 2
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...[d-(a+b)*2]/c
    24 00000000 A0[00000000]                    mov al , [a] ; al = a
    25 00000005 0205[01000000]                  add al , [b] ; al = a + b
    26 0000000B F625[05000000]                  mul byte[doi]; ax = 2*(a+b)
    27 00000011 6689C3                          mov bx , ax  ; bx = ax = 2*(a+b)
    28                                          
    29 00000014 66A1[03000000]                  mov ax , [d] ;ax = d
    30 0000001A 6629D8                          sub ax , bx  ; ax = ax - bx
    31 0000001D F635[02000000]                  div byte[c]  ; ax = ax / c  si   dx = ax % c
    32                                          
    33                                          ;ax = 33
    34                                          ;dx = 1
    35                                          ;[d-(a+b)*2]/c = [200 - 50*2]/3 = 100/3
    36                                          ; exit(0)
    37 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
