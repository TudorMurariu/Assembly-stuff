     1                                  bits 32 ; assembling 
     2                                  global start        
     3                                  
     4                                  extern exit, printf , scanf             
     5                                  import exit msvcrt.dll   
     6                                  import printf msvcrt.dll    
     7                                  import scanf msvcrt.dll   
     8                                  extern base_10_to_16                         
     9                                  
    10                                  segment data use32 class=data
    11                                      ; ...
    12 00000000 256400                      format db "%d",0
    13 00000003 00000000                    n dd 0
    14 00000007 00<rept>                    n_h times 17 db 0
    15 00000018 00000000                    len dd 0
    16 0000001C 000000000000                aux db 0,0,0,0,0,0
    17 00000022 0A00                        endl db 10,0
    18 00000024 00000000                    aux_l dd 0
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24                                          
    25                                          ; scanf
    26 00000000 68[03000000]                    push dword n
    27 00000005 68[00000000]                    push dword format
    28 0000000A FF15[00000000]                  call [scanf]
    29 00000010 83C408                          add esp , 4*2
    30                                          
    31 00000013 68[07000000]                    push dword n_h
    32 00000018 FF35[03000000]                  push dword [n]
    33 0000001E E8(00000000)                    call base_10_to_16
    34 00000023 83C408                          add esp , 4*2
    35                                          
    36 00000026 A3[18000000]                    mov [len] , eax
    37                                          
    38 0000002B FF35[18000000]                  push dword [len]
    39 00000031 68[00000000]                    push dword format
    40 00000036 FF15[00000000]                  call [printf]
    41                                          
    42 0000003C 68[22000000]                    push dword endl
    43 00000041 FF15[00000000]                  call [printf]
    44 00000047 83C404                          add esp , 4*1
    45                                          
    46                                          
    47                                          
    48 0000004A 8B0D[18000000]                  mov ecx , [len]
    49                                          loop_main:
    50 00000050 83F900                              cmp ecx , 0
    51 00000053 0F8499000000                            je end1
    52 00000059 49                                  dec ecx
    53                                                 
    54 0000005A 890D[24000000]                      mov [aux_l] , ecx
    55                                                          
    56                                              
    57 00000060 A1[24000000]                        mov eax , [aux_l]
    58                                              loop_aux:
    59 00000065 83F8FF                                  cmp eax , -1
    60 00000068 741F                                        je out_main
    61                                                  
    62 0000006A 8A98[07000000]                          mov bl , [n_h + eax]
    63 00000070 881D[1C000000]                          mov [aux] , bl
    64                                                  
    65 00000076 50                                      push dword eax
    66                                                  
    67 00000077 68[1C000000]                            push dword aux
    68 0000007C FF15[00000000]                          call [printf]
    69 00000082 83C404                                  add esp , 4*1
    70                                                  
    71 00000085 58                                      pop eax
    72 00000086 48                                      dec eax
    73 00000087 EBDC                                jmp loop_aux
    74                                              out_main:
    75                                              
    76                                              
    77                                              
    78 00000089 A1[18000000]                        mov eax , [len]
    79 0000008E 48                                  dec eax
    80                                              loop_aux1:
    81 0000008F 3B05[24000000]                          cmp eax , [aux_l]
    82 00000095 741F                                        je out_main1
    83                                                  
    84 00000097 8A98[07000000]                          mov bl , [n_h + eax]
    85 0000009D 881D[1C000000]                          mov [aux] , bl
    86                                                  
    87 000000A3 50                                      push dword eax
    88                                                  
    89 000000A4 68[1C000000]                            push dword aux
    90 000000A9 FF15[00000000]                          call [printf]
    91 000000AF 83C404                                  add esp , 4*1
    92                                                  
    93 000000B2 58                                      pop eax
    94 000000B3 48                                      dec eax
    95 000000B4 EBD9                                jmp loop_aux1
    96                                              out_main1:
    97                                              
    98                                              
    99                                              
   100 000000B6 68[22000000]                        push dword endl
   101 000000BB FF15[00000000]                      call [printf]
   102 000000C1 83C404                              add esp , 4*1
   103                                              
   104 000000C4 8B0D[24000000]                      mov ecx , [aux_l]
   105 000000CA 51                                  push dword ecx
   106 000000CB 68[00000000]                        push dword format
   107 000000D0 FF15[00000000]                      call [printf]
   108 000000D6 83C408                              add esp , 4*2
   109                                              
   110 000000D9 68[22000000]                        push dword endl
   111 000000DE FF15[00000000]                      call [printf]
   112 000000E4 83C404                              add esp , 4*1
   113                                              
   114 000000E7 8B0D[24000000]                      mov ecx , [aux_l]
   115 000000ED E95EFFFFFF                      jmp loop_main
   116                                          end1:
   117                                      
   118                                          ; exit(0)
   119 000000F2 6A00                            push    dword 0     
   120 000000F4 FF15[00000000]                  call    [exit]       
   121                                  
   122                                          
   123                                     
   124                                          
   125                                       
   126                                          
   127                                          
