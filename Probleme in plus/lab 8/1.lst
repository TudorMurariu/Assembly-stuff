     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit,printf,scanf , fopen , fread , fclose         
     5                                  import exit msvcrt.dll    
     6                                  import printf msvcrt.dll    
     7                                  import scanf msvcrt.dll   
     8                                  import fopen msvcrt.dll  
     9                                  import fread msvcrt.dll   
    10                                  import fclose msvcrt.dll 
    11                                  
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 00<rept>                    text times 101 db 0
    15 00000065 74657874312E747874-         nume_fisier db "text1.txt",0
    15 0000006E 00                 
    16 0000006F 7200                        mod_aces db "r",0
    17 00000071 00000000                    descriptor_fis dd 0
    18 00000075 00000000                    nr_v dd 0
    19 00000079 64000000                    len dd 100
    20 0000007D 256400                      format db "%d",0
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25                                          ; fopen(nume_fisier,mod_aces)
    26 00000000 68[6F000000]                    push dword mod_aces
    27 00000005 68[65000000]                    push dword nume_fisier
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp , 4*2
    30                                          
    31 00000013 A3[71000000]                    mov [descriptor_fis] , eax
    32                                          
    33                                          ; fread(text,1,len,descriptor_fis)
    34 00000018 FF35[71000000]                  push dword [descriptor_fis]
    35 0000001E FF35[79000000]                  push dword [len]
    36 00000024 6A01                            push dword 1
    37 00000026 68[00000000]                    push dword text
    38 0000002B FF15[00000000]                  call [fread]
    39 00000031 83C410                          add esp , 4*4
    40                                          
    41 00000034 BE[00000000]                    mov esi , text
    42                                          loop1:
    43 00000039 AC                                  lodsb ; al = esi , inc esi
    44                                              
    45 0000003A 3C00                                cmp al , 0
    46 0000003C 7423                                    je out1
    47                                              ;esle:
    48 0000003E 3C61                                cmp al , 'a' 
    49 00000040 7412                                je vocala
    50                                              
    51 00000042 3C65                                cmp al , 'e' 
    52 00000044 740E                                je vocala
    53                                              
    54 00000046 3C69                                cmp al , 'i' 
    55 00000048 740A                                je vocala
    56                                              
    57 0000004A 3C6F                                cmp al , 'o' 
    58 0000004C 7406                                je vocala
    59                                              
    60 0000004E 3C75                                cmp al , 'u' 
    61 00000050 7402                                je vocala
    62                                              
    63 00000052 EB0B                                jmp continue
    64                                              vocala:
    65                                              
    66 00000054 A1[75000000]                        mov eax , [nr_v]
    67 00000059 40                                  inc eax
    68 0000005A A3[75000000]                        mov [nr_v] , eax
    69                                              
    70                                              continue:
    71 0000005F EBD8                            jmp loop1
    72                                          out1:
    73                                          
    74                                          ;printf
    75 00000061 FF35[75000000]                  push dword [nr_v]
    76 00000067 68[7D000000]                    push dword format
    77 0000006C FF15[00000000]                  call [printf]
    78 00000072 83C408                          add esp , 4*2
    79                                          
    80                                          ;fclose(descriptor_fis)
    81 00000075 FF35[71000000]                  push dword [descriptor_fis]
    82 0000007B FF15[00000000]                  call [fclose]
    83 00000081 83C404                          add esp , 4*1
    84                                          
    85                                          ; exit(0)
    86 00000084 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    87 00000086 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
